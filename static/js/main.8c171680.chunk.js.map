{"version":3,"sources":["utils/api.js","resources/images/svgs/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","resources/images/svgs/avatar-loader.svg","components/Main.js","components/Footer.js","resources/images/svgs/popup-loader.svg","resources/images/svgs/popup-error.svg","components/PopupMessage.js","components/PopupListener.js","components/PopupWithForm.js","components/Input.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","options","this","_baseUrl","baseUrl","_token","authorization","deleteCard","bind","toggleLike","res","ok","json","Promise","reject","status","fetch","method","headers","then","_checkResponseData","values","body","JSON","stringify","name","about","description","data","link","cardId","isLiked","avatar","Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","userInfo","useContext","loadingRef","useRef","useState","current","isLoading","setLikeIsLoading","cardData","item","caption","owner","isOwn","_id","likes","some","like","cardLikeButtonClassName","useEffect","type","onClick","onCardClick","onCardDelete","onCardLike","length","disabled","i","Main","avatarLoader","onEditAvatar","onEditProfile","onAddPlace","cards","map","Footer","PopupMessage","state","loading","loaderImage","errorImage","message","PopupListener","checkState","failed","handleEscClose","evt","key","onClose","handleOverlayClose","target","classList","contains","document","addEventListener","removeEventListener","PopupWithForm","open","noValidate","onChange","onFormValidityChange","currentTarget","checkValidity","onSubmit","window","location","reload","heading","children","formValidityState","Input","inputRef","ref","inputModifier","inputValidityState","inputType","inputName","value","inputValue","placeholder","inputPlaceholder","minLength","maxLength","inputMaxLength","autoComplete","required","onValueChange","onInputValidityChange","validity","valid","validationMessage","EditAvatarPopup","setLink","formValidity","setFormValidity","inputValidity","setInputValidity","preventDefault","onUpdateAvatar","EditProfilePopup","setName","setDescription","nameValidity","setNameValidity","descriptionValidity","setDescriptionValidity","onUpdateUser","AddPlacePopup","placeName","setPlaceName","placePic","setPlacePic","picValidity","setPicValidity","onAddPlaceSubmit","ConfirmDeletePopup","initialValidityState","onDeleteConfirmation","card","ImagePopup","App","currentUser","setCurrentUser","setCards","selectedCard","setSelectedCard","editAvatarState","setEditAvatarState","editProfileState","setEditProfileState","addPlaceState","setAddPlaceState","confirmDeleteState","setConfirmDeleteState","imagePopupState","setImagePopupState","closeAllPopups","fetchUserInfo","catch","err","console","log","fetchInitialCards","Provider","newCard","newCards","patchUserInfo","setTimeout","updateAvatar","postCard","deletedCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c171680.chunk.js","sourcesContent":["class Api {\n  constructor (options) {\n    this._baseUrl = options.baseUrl;\n    this._token = options.authorization;\n\n    this.deleteCard = this.deleteCard.bind(this);\n    this.toggleLike = this.toggleLike.bind(this);\n  }\n\n  _checkResponseData (res) { // Проверка ответа от сервера\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  fetchUserInfo () { // Загрузка информации о пользователе\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  fetchInitialCards () { // Загрузка готовых карточек\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  patchUserInfo (values) { // Обновление информации о пользователе\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: values.name,\n        about: values.description\n      })\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  postCard (data) { // Отправка карточки\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  deleteCard (cardId) { // Удаление карточки\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  toggleLike (cardId, isLiked) { // Установка и снятие лайка\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  updateAvatar (link) { // Обновление аватарки\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n    .then(res => this._checkResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\n  authorization: '21765504-482c-4ec0-96f1-ca3e4078b259'\n});\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import logo from '../resources/images/svgs/logo.svg';\n\nfunction Header () {\n  return (\n    <header className=\"header container__header\">\n      <img className=\"header__logo\" src={logo} alt=\"Логотип Mesto\" />\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\n\nexport { CurrentUserContext };","import React from 'react';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Card (props) {\n  const userInfo = React.useContext(CurrentUserContext); // * Подписка на контекст\n\n  const loadingRef = React.useRef(false); // * Реф-переменная загрузки лайка\n  const [isLoading, setLikeIsLoading] = React.useState(loadingRef.current); // * Стейт-переменная загрузки лайка\n\n  // * Обработка данных о карточке\n\n  const cardData = props.item;\n  cardData.alt = cardData.name;\n  cardData.caption = `${cardData.alt} / © ${cardData.owner.name}`;\n  cardData.isOwn = cardData.owner._id === userInfo._id;\n  cardData.isLiked = cardData.likes.some(like => like._id === userInfo._id)\n\n  const cardLikeButtonClassName = ( // * Стиль кнопки лайка\n    `card__like ${cardData.isLiked ? 'card__like_active' : ''}`\n  );\n\n  // * Функции\n\n  // -- Обработчики карточки\n\n  function handleClick () { // Клик по картинке\n    props.onCardClick(cardData);\n  }\n\n  function handleDelete () { // Удаление карточки\n    props.onCardDelete(cardData);\n  }\n\n  function handleLike () { // Снятие и установка лайка\n    loadingRef.current = true;\n    setLikeIsLoading(loadingRef.current);\n\n    props.onCardLike(cardData);\n  }\n\n  // * Эффекты при монтировании компонента\n\n  React.useEffect(() => { // Обновление иконки лайка\n    loadingRef.current = false;\n    setLikeIsLoading(loadingRef.current);\n  }, [props]);\n\n  // * Возвращаемое значение\n\n  return (\n    <article className=\"card\" key={props.i}>\n      <button className=\"card__open-fullpic\" type=\"button\" onClick={handleClick}>\n        <img className=\"card__image\" src={cardData.link} alt={cardData.alt} />\n      </button>\n      {cardData.isOwn && (<button className=\"card__delete\" type=\"button\" onClick={handleDelete}></button>)}\n      <div className=\"card__label\">\n        <h2 className=\"card__name\">{cardData.name}</h2>\n        {!isLoading && (<button className={cardLikeButtonClassName} type=\"button\" onClick={handleLike}>\n          <p className=\"card__counter\">{cardData.likes.length}</p>\n        </button>)}\n        {isLoading && (<button className=\"card__loader\" disabled />)}\n      </div>\n    </article>\n  );\n}\n\nexport default Card;","export default __webpack_public_path__ + \"static/media/avatar-loader.07e847c1.svg\";","import React from 'react';\n\nimport Card from './Card.js';\n\nimport avatarLoader from '../resources/images/svgs/avatar-loader.svg';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Main (props) {\n  const userInfo = React.useContext(CurrentUserContext); // * Подписка на контекст\n\n  // * Возвращаемое значение\n\n  return (\n    <main className=\"main container__main\">\n      <section className=\"profile main__profile\">\n        <div className=\"profile__main\">\n          <img className=\"profile__avatar\" src={userInfo.avatar || avatarLoader} alt=\"Портрет пользователя\" />\n          <button className=\"profile__avatar-button\" onClick={props.onEditAvatar} />\n          <div className=\"profile__text-info\">\n            <h1 className=\"profile__name\">{userInfo.name || 'Загрузка...'}</h1>\n            <button className=\"profile__edit\" type=\"button\" onClick={props.onEditProfile} />\n            <p className=\"profile__description\">{userInfo.about || 'Пожалуйста, подождите'}</p>\n          </div>\n        </div>\n        <button className=\"profile__add\" type=\"button\" onClick={props.onAddPlace} />\n      </section>\n      <section className=\"cards main__cards\">\n        {props.cards.map((item) => (\n          <Card\n            item={item}\n            key={item._id}\n            onCardClick={props.onCardClick}\n            onCardDelete={props.onCardDelete}\n            onCardLike={props.onCardLike}\n          />\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","function Footer () {\n  return (\n    <footer className=\"footer container__footer\">\n      <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/popup-loader.1f235894.svg\";","export default __webpack_public_path__ + \"static/media/popup-error.e597a708.svg\";","import loaderImage from '../resources/images/svgs/popup-loader.svg';\nimport errorImage from '../resources/images/svgs/popup-error.svg';\n\nfunction PopupMessage (props) {\n  return (\n    <div className={`popup__message popup-message ${(props.name === 'delete') ? 'popup-message_delete' : ''}`}>\n      <img className=\"popup-message__img\" src={props.state.loading ? loaderImage : errorImage} alt=\"Иллюстрация сообщения\" />\n      <h3 className=\"popup-message__text\">{props.state.loading ? 'Загрузка...' : props.state.message}</h3>\n    </div>\n  );\n}\n\nexport default PopupMessage;","import React from 'react';\n\nfunction PopupListener (props) {\n  \n  // * Эффект при монтировании компонента\n\n  React.useEffect(() => {\n    function checkState () { // Проверка состояния попапа\n      return (!props.state.loading && !props.state.failed) ? true : false;\n    }\n\n    function handleEscClose (evt) { // Хэндлер нажатия на Esc\n      if (evt.key === 'Escape' && checkState()) {\n        props.onClose();\n      }\n    }\n\n    function handleOverlayClose (evt) { // Хэндлер нажатия на оверлей\n      if (evt.target.classList.contains('popup') && checkState()) {\n        props.onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    document.addEventListener('click', handleOverlayClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n      document.removeEventListener('click', handleOverlayClose);\n    }\n  }, [props]);\n\n  // * Возвращаемое значение\n\n  return (null);\n}\n\nexport default PopupListener;","import React from 'react';\n\nimport PopupMessage from './PopupMessage.js';\nimport PopupListener from './PopupListener.js';\n\nfunction PopupWithForm (props) {\n  \n  // * Обработчики формы\n\n  function handleChange (evt) { // Изменение валидности формы\n    props.onFormValidityChange(evt.currentTarget.checkValidity());\n  }\n\n  function handleRefresh () { // Перезагрузка страницы (при ошибке запроса)\n    window.location.reload();\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <div className={`popup popup-${props.name} root__popup ${props.state.open ? 'popup_opened' : ''}`}>\n        <form className=\"popup__container\" name={props.name} noValidate onChange={handleChange} onSubmit={props.onSubmit}>\n          {(!props.state.loading && !props.state.failed) && (<button className=\"popup__close\" type=\"button\" onClick={props.onClose} />)}\n          {props.state.failed && (<button className=\"popup__refresh\" type=\"button\" onClick={handleRefresh} />)}\n          <h2\n            className={`popup__heading ${(props.name === 'delete') ? 'popup__heading_delete' : ''}`}\n          >\n            {props.heading}\n          </h2>\n          {(!props.state.loading && !props.state.failed) && props.children}\n          {(!props.state.loading && !props.state.failed) && (<button\n            className={`popup__button ${(props.name === 'delete') ? 'popup__button_type_delete' : ''}`}\n            type=\"submit\"\n            disabled={!props.formValidityState}\n          >\n            {(props.name === 'delete') ? 'Удалить' : 'Сохранить'}\n          </button>)}\n          {(props.state.loading || props.state.failed) && (<PopupMessage name={props.name} state={props.state} message={props.message} />)}\n        </form>\n        {props.state.open && (<PopupListener state={props.state} onClose={props.onClose} />)}\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction Input (props) {\n  const inputRef = React.useRef(); // * Реф инпута\n\n  function handleChange (evt) { // * Обработчик изменения значения инпута\n    props.onValueChange(evt);\n    props.onInputValidityChange(evt.target.validity.valid);\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <>\n      <input\n        ref={inputRef}\n        className={`popup__input ${props.inputModifier} ${(!props.inputValidityState ? 'popup__input_invalid' : '')}`}\n        type={props.inputType}\n        name={props.inputName}\n        value={props.inputValue}\n        placeholder={props.inputPlaceholder}\n        minLength=\"2\" maxLength={props.inputMaxLength}\n        autoComplete=\"off\"\n        required\n        onChange={handleChange}\n      />\n      {!props.inputValidityState &&\n      (<span className=\"popup__input-error\">\n        {inputRef.current && inputRef.current.validationMessage}\n      </span>)\n      }\n    </>\n  );\n}\n\nexport default Input;","import React from 'react';\n\nimport PopupWithForm from './PopupWithForm.js';\nimport Input from './Input.js';\n\nfunction EditAvatarPopup (props) {\n  // ! Реф, предусмотренный заданием, не используется из-за валидации: не нашёл способа совместить.\n  // ! Зато реф есть в самом Input! :)\n\n  // * Стейт-переменные\n\n  const [link, setLink] = React.useState(''); // Адрес файла аватарки\n\n  const [formValidity, setFormValidity] = React.useState(false); // Состояние валидности формы\n  const [inputValidity, setInputValidity] = React.useState(true); // Состояние валидности инпута\n\n  // * Функции\n\n  // -- Обработчики формы\n\n  function handleLinkChange (evt) { // Изменение значения инпута\n    setLink(evt.target.value);\n  }\n\n  function handleSubmit (evt) { // Сабмит формы\n    evt.preventDefault();\n\n    props.onUpdateAvatar(link);\n\n    setLink('');\n    setInputValidity(true);\n    setFormValidity(false);\n  }\n\n  function handleClose () { // Закрытие формы\n    props.onClose();\n\n    setLink('');\n    setInputValidity(true);\n    setFormValidity(false);\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <PopupWithForm\n      state={props.state}\n      formValidityState={formValidity}\n      onFormValidityChange={setFormValidity}\n      name=\"avatar\"\n      heading=\"Обновить аватар\"\n      onSubmit={handleSubmit}\n      onClose={handleClose}>\n      <Input\n        inputModifier=\"popup__input_avatar\"\n        inputName=\"avatar\"\n        inputValue={link}\n        inputType=\"url\"\n        inputPlaceholder=\"Ссылка на фото\"\n        inputValidityState={inputValidity}\n        onInputValidityChange={setInputValidity}\n        onValueChange={handleLinkChange}\n      />\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\n\nimport PopupWithForm from './PopupWithForm.js';\nimport Input from './Input.js';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup (props) {\n  const userInfo = React.useContext(CurrentUserContext); // * Подписка на контекст\n\n  // * Cтейт-переменные\n\n  const [name, setName] = React.useState(''); // Имя пользователя\n  const [description, setDescription] = React.useState(''); // Описание пользователя\n\n  const [formValidity, setFormValidity] = React.useState(true); // Состояние валидности формы\n  const [nameValidity, setNameValidity] = React.useState(true); // Состояние валидности инпута с именем\n  const [descriptionValidity, setDescriptionValidity] = React.useState(true); // Состояние валидности инпута с описанием\n\n  // * Функции\n\n  // -- Обработчики формы\n\n  function handleNameChange (evt) { // Изменение имени пользователя\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange (evt) { // Изменение описания пользователя\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit (evt) { // Сабмит\n    evt.preventDefault();\n\n    props.onUpdateUser({\n      name,\n      description\n    });\n\n    setFormValidity(true);\n  }\n\n  function handleClose () { // Закрытие\n    props.onClose();\n\n    setName(userInfo.name);\n    setDescription(userInfo.about);\n\n    setNameValidity(true);\n    setDescriptionValidity(true);\n    setFormValidity(true);\n  }\n\n  // * Эффекты при монтировании компонента\n\n  React.useEffect(() => { // Установка имени и описания пользователя по умолчанию\n    setName(userInfo.name);\n    setDescription(userInfo.about);\n  }, [userInfo]);\n\n  // * Возвращаемое значение\n\n  return (\n    <PopupWithForm\n      state={props.state}\n      formValidityState={formValidity}\n      onFormValidityChange={setFormValidity}\n      name=\"profile\"\n      heading=\"Редактировать профиль\"\n      onSubmit={handleSubmit}\n      onClose={handleClose}\n    >\n      <Input\n        inputModifier=\"popup__input_name\"\n        inputType=\"text\"\n        inputName=\"name\"\n        inputValue={name}\n        inputPlaceholder=\"Имя\"\n        inputMaxLength=\"40\"\n        inputValidityState={nameValidity}\n        onInputValidityChange={setNameValidity}\n        onValueChange={handleNameChange}\n      />\n      <Input\n        inputModifier=\"popup__input_description\"\n        inputType=\"text\"\n        inputName=\"description\"\n        inputValue={description}\n        inputPlaceholder=\"Описание\"\n        inputMaxLength=\"200\"\n        inputValidityState={descriptionValidity}\n        onInputValidityChange={setDescriptionValidity}\n        onValueChange={handleDescriptionChange}\n      />\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React from 'react';\n\nimport PopupWithForm from './PopupWithForm.js';\nimport Input from './Input.js';\n\nfunction AddPlacePopup (props) {\n\n  // * Стейт-переменные\n\n  const [placeName, setPlaceName] = React.useState(''); // Название места\n  const [placePic, setPlacePic] = React.useState(''); // Адрес иллюстрации места\n\n  const [formValidity, setFormValidity] = React.useState(false); // Состояние валидности формы\n  const [nameValidity, setNameValidity] = React.useState(true); // Состояние валидности инпута с названием\n  const [picValidity, setPicValidity] = React.useState(true); // Состояние валидности инпута с адресом\n\n  // * Функции\n\n  // -- Обработчики формы\n\n  function handlePlaceNameChange (evt) { // Изменение названия\n    setPlaceName(evt.target.value);\n  }\n\n  function handlePlacePicChange (evt) { // Изменение адреса\n    setPlacePic(evt.target.value);\n  }\n\n  function handleSubmit (evt) { // Сабмит\n    evt.preventDefault();\n\n    props.onAddPlaceSubmit({\n      name: placeName,\n      link: placePic\n    });\n\n    setPlaceName('');\n    setPlacePic('');\n\n    setNameValidity(true);\n    setPicValidity(true);\n    setFormValidity(false);\n  }\n\n  function handleClose () { // Закрытие\n    props.onClose();\n\n    setPlaceName('');\n    setPlacePic('');\n\n    setNameValidity(true);\n    setPicValidity(true);\n    setFormValidity(false);\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <PopupWithForm\n      state={props.state}\n      formValidityState={formValidity}\n      onFormValidityChange={setFormValidity}\n      name=\"card\"\n      heading=\"Новое место\"\n      onSubmit={handleSubmit}\n      onClose={handleClose}\n    >\n      <Input\n        inputModifier=\"popup__input_card-name\"\n        inputType=\"text\"\n        inputName=\"place\"\n        inputValue={placeName}\n        inputPlaceholder=\"Название\"\n        inputMaxLength=\"30\"\n        inputValidityState={nameValidity}\n        onInputValidityChange={setNameValidity}\n        onValueChange={handlePlaceNameChange}\n      />\n      <Input\n        inputModifier=\"popup__input_card-link\"\n        inputType=\"url\"\n        inputName=\"link\"\n        inputValue={placePic}\n        inputPlaceholder=\"Ссылка на картинку\"\n        inputValidityState={picValidity}\n        onInputValidityChange={setPicValidity}\n        onValueChange={handlePlacePicChange}\n      />\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import PopupWithForm from './PopupWithForm.js';\n\nfunction ConfirmDeletePopup (props) {\n  \n  // * Обработчик сабмита формы\n\n  function handleSubmit (evt) {\n    evt.preventDefault();\n    props.onDeleteConfirmation(props.card);\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <PopupWithForm\n      state={props.state}\n      formValidityState={props.initialValidityState}\n      name=\"delete\"\n      heading=\"Вы уверены?\"\n      onSubmit={handleSubmit}\n      onClose={props.onClose}\n    />\n  )\n}\n\nexport default ConfirmDeletePopup;","import PopupListener from './PopupListener.js';\n\nfunction ImagePopup (props) {\n  return (\n    <div className={`popup popup-fullpic root__popup ${props.state.open ? 'popup_opened' : ''}`}>\n      <figure className=\"popup__figure\">\n        {props.card && (<button className=\"popup__close popup__close_fullpic\" type=\"button\" onClick={props.onClose} />)}\n        <img\n          className=\"popup__fullpic\"\n          src={props.card ? props.card.link : null}\n          alt={props.card ? props.card.alt : null}\n        />\n        <figcaption className=\"popup__caption\">{props.card ? props.card.caption : null}</figcaption>\n      </figure>\n      {props.state.open && (<PopupListener state={props.state} onClose={props.onClose} />)}\n    </div>\n  );\n}\n\nexport default ImagePopup;","import React from 'react';\nimport api from '../utils/api.js';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ConfirmDeletePopup from './ConfirmDeletePopup.js';\nimport ImagePopup from \"./ImagePopup.js\";\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\n// ! Привет команде код-ревью! :) Большая была работа — но, кажется, всё!\n// ! В двух моментах я не нашёл способа совместить требование из задания с просьбой делать по-своему.\n// ! Оба момента отмечены комментариями: надеюсь, это не будет проблемой :)\n\nfunction App () {\n\n  // * Стейт-переменные\n\n  // -- Общие состояния\n\n  const [currentUser, setCurrentUser] = React.useState({ name: '', about: '' }); // Активный пользователь\n  const [cards, setCards] = React.useState([]); // Массив карточек\n  const [selectedCard, setSelectedCard] = React.useState({}); // Выбранная карточка\n\n  // -- Состояния попапов\n\n  // ! Вместо одного состояния открытия, предусмотренного в задании, я передаю объект с группой свойств.\n  // ! Это позволяет объединить сообщение об ошибке и лоадер попапа в один компонент вместо двух.\n\n  const [editAvatarState, setEditAvatarState] = React.useState({ // Состояние попапа «Редактировать аватар»\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [editProfileState, setEditProfileState] = React.useState({ // Состояние попапа «Редактировать профиль»\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [addPlaceState, setAddPlaceState] = React.useState({ // Состояние попапа «Добавить карточку»\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [confirmDeleteState, setConfirmDeleteState] = React.useState({ // Состояние попапа с подтверждением удаления\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [imagePopupState, setImagePopupState] = React.useState({ // Состояние попапа с полноразмерной картинкой\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  // * Функции\n\n  // -- Функции вызова попапов\n\n  function handleEditAvatarClick () { // Вызов попапа «Редактировать аватар»\n    setEditAvatarState({ ...editAvatarState, open: true });\n  }\n\n  function handleEditProfileClick () { // Вызов попапа «Редактировать профиль»\n    setEditProfileState({ ...editProfileState, open: true });\n  }\n\n  function handleAddPlaceClick () { // Вызов попапа «Добавить карточку»\n    setAddPlaceState({ ...addPlaceState, open: true });\n  }\n\n  function handleDeleteCardClick () { // Вызов попапа с подтверждением удаления\n    setSelectedCard(this.item);\n    setConfirmDeleteState({ ...confirmDeleteState, open: true });\n  }\n\n  function handleCardClick () { // Вызов попапа с полноразмерной картинкой\n    setSelectedCard(this.item);\n    setImagePopupState({ ...imagePopupState, open: true });\n  }\n\n  // -- Обработчики запросов\n\n  function handleUpdateAvatar (link) { // Обновление аватарки\n    setEditAvatarState({ ...editAvatarState, loading: true });\n\n    api.updateAvatar(link)\n      .then(res => {\n        setCurrentUser(res);\n        setTimeout(() => {\n          setEditAvatarState({ ...editAvatarState, open: false, loading: false });\n        }, 400);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n        setEditAvatarState({\n          ...editAvatarState,\n          loading: false,\n          failed: true,\n          message: err\n        });\n      });\n  }\n\n  function handleUpdateUser (values) { // Обновление информации о пользователе\n    setEditProfileState({ ...editProfileState, loading: true });\n\n    api.patchUserInfo(values)\n      .then(res => {\n        setCurrentUser(res);\n        setTimeout(() => {\n          setEditProfileState({ ...editProfileState, open: false, loading: false });\n        }, 400);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n        setEditProfileState({\n          ...editProfileState,\n          loading: false,\n          failed: true,\n          message: err\n        });\n      });\n  }\n\n  function handleAddPlaceSubmit (data) { // Добавление новой карточки\n    setAddPlaceState({ ...addPlaceState, loading: true });\n\n    api.postCard(data)\n      .then(res => {\n        setCards([res, ...cards]);\n        setTimeout(() => {\n          setAddPlaceState({ ...addPlaceState, open: false, loading: false });\n        }, 400);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n        setAddPlaceState({\n          ...addPlaceState,\n          loading: false,\n          failed: true,\n          message: err\n        });\n      });\n  }\n\n  function handleCardDelete (card) { // Удаление карточки\n    setConfirmDeleteState({ ...confirmDeleteState, loading: true });\n\n    api.deleteCard(card._id)\n      .then(deletedCard => {\n        const newCards = cards.filter(deletedCard => deletedCard._id !== card._id);\n        setCards(newCards);\n        setTimeout(() => {\n          setConfirmDeleteState({ ...confirmDeleteState, open: false, loading: false });\n        }, 400);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n        setConfirmDeleteState({\n          ...confirmDeleteState,\n          loading: false,\n          failed: true,\n          message: err\n        });\n      });\n  }\n\n  function handleCardLike (card) { // Установка и снятие лайка\n    api.toggleLike(card._id, card.isLiked)\n      .then(newCard => {\n        const newCards = cards.map(item => item._id === card._id ? newCard : item);\n        setCards(newCards);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  // -- Другие функции\n  \n  function closeAllPopups () { // Закрытие всех попапов и обнуление выбранной карточки\n    setEditAvatarState({ ...editAvatarState, open: false });\n    setEditProfileState({ ...editProfileState, open: false });\n    setAddPlaceState({ ...addPlaceState, open: false });\n    setConfirmDeleteState({ ...confirmDeleteState, open: false });\n    setImagePopupState({ ...imagePopupState, open: false });\n\n    setSelectedCard(null);\n  }\n\n  // * Эффекты при монтировании компонента\n\n  // -- Запросы к серверу\n\n  React.useEffect(() => { // Получение данных о пользователе\n    api.fetchUserInfo()\n      .then(res => {\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  React.useEffect(() => { // Получение карточек\n    api.fetchInitialCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  // * Возвращаемое значение\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"container root__container\">   \n        <Header />\n        <Main\n          cards={cards}\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onCardDelete={handleDeleteCardClick}\n          onCardLike={handleCardLike}\n        />\n        <Footer />\n      </div>\n      <EditProfilePopup\n        state={editProfileState}\n        initialValidityState={true}\n        onUpdateUser={handleUpdateUser}\n        onClose={closeAllPopups}\n      />\n      <EditAvatarPopup\n        state={editAvatarState}\n        initialValidityState={false}\n        onUpdateAvatar={handleUpdateAvatar}\n        onClose={closeAllPopups}\n      />\n      <AddPlacePopup\n        state={addPlaceState}\n        initialValidityState={false}\n        onAddPlaceSubmit={handleAddPlaceSubmit}\n        onClose={closeAllPopups}\n      />\n      <ConfirmDeletePopup\n        card={selectedCard}\n        state={confirmDeleteState}\n        initialValidityState={true}\n        onDeleteConfirmation={handleCardDelete}\n        onClose={closeAllPopups}\n      />\n      <ImagePopup card={selectedCard} state={imagePopupState} onClose={closeAllPopups} />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}